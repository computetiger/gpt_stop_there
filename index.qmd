---
title: "Gpt-stop-there"
jupyter: python3
---

# Introduction
    서론 발표 내용


```{python}
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt    
import seaborn as sns

plt.rcParams.update({"figure.dpi": 150,
                     "figure.figsize": [8, 6],
                     "font.size": 11,
                     "font.family": "Malgun Gothic"})
###서론
intro = pd.read_excel("file/소비자동향조사.xlsx")
plt.figure(figsize = [6,4])
intro["year"]
sns.lineplot(data=intro, x='year', y='임금수준전망', color='dodgerblue', label='임금수준전망', marker='o')
sns.lineplot(data=intro, x='year', y='향후경기전망', color='salmon', label='향후경기전망', marker='o')
sns.lineplot(data=intro, x='year', y='현재경기판단', color='red', label='현재경기판단', marker='o')
plt.xlabel('Year',fontsize=14)
plt.ylabel('Percentage(%)',fontsize=14)
plt.title("소비자동향조사")
plt.legend()
plt.grid()
plt.show()
```

***

# Main
## CPI 
####  file read
```{python}
df = pd.read_excel("file/cpi_2011to2023.xlsx")
df.head()
```

    컬럼명 변경, inplace=True, 행 제거, 특정 칼럼 추출, 최저시급 리스트 추가
    
```{python}
df.rename(columns = {'시점':"year","전국" : "cpi","전국.2":"food_cpi"},inplace=True)
df.drop(0,inplace=True) #inplace = True 설명
df=df[['year','cpi','food_cpi']]
df.reset_index(drop=True,inplace=True)#선생님한테 물어보기
list = ["4,320","4,580","4,860","5,210","5,580","6,030","6,470",\
        "7,530","8,350","8,590","8,720","9,160","9,620"]
df['min_wage'] = np.array(list)
df = df[['year',"min_wage", 'cpi', 'food_cpi']]
df.head()
```
    최저시급, 연도 정수형int 변경
```{python}
type(df["min_wage"][0])
type(df["year"][0])
df["min_wage"] = df["min_wage"].str.replace(',',"").astype(int) 
df["year"]     = df["year"].astype(int) 
df.dtypes
```

#### CPI 2011년 기준으로 변환
```{python}
df
```

```{python}
cpi_coefficent=df['cpi'][0]/df['cpi'][9]
food_coefficent=df['food_cpi'][0]/df['food_cpi'][9]
df["cpi"] = df["cpi"]/cpi_coefficent
df["food_cpi"] = df["food_cpi"]/food_coefficent
df.head()
```

#### Inflation 계산 
```{python}
df["inflation"] = 0.0

for i in range(1, len(df)):
    df.loc[i, "inflation"] = ((df.loc[i, "cpi"] - df.loc[i-1, "cpi"])\
    /df.loc[i-1, "cpi"]) * 100
df.head()
```

#### Food inflation 계산
```{python}
#| messeage: false
#| warning: false #furture warning 에러창 뜨지 않게 하기기
df['food_inflation'] = 0
for i in range(1, len(df)):\
    df.loc[i, "food_inflation"] = ((df.loc[i, "food_cpi"] - df.loc[i-1, "food_cpi"])\
   /df.loc[i-1, "food_cpi"]) * 100
df['food_inflation'] = df['food_inflation'].fillna(0)
df.head()
```

#### inf,food_inf 시각화 두개 동시에 꺾은선 그래프
```{python}
plt.clf()
plt.figure(figsize=(9,7))
sns.lineplot(data=df, x='year', y='food_inflation',color='red' ,label='식품 인플레이션', marker='o')
sns.lineplot(data=df, x='year', y='inflation',color='dodgerblue',label='인플레이션', marker='o')
# 레이블과 제목 설정
plt.xlabel('Year',fontsize=16)
plt.ylabel('Percentage(%)',fontsize=16)
plt.title('소비자 물가지수와 식품 물가지수의 상승율 비교')
plt.legend()
# 그래프 표시
plt.show()
```

#### 최저시급, 실질 최저시급 상승율 
```{python}
#| messeage: false
#| warning: false 
infla_adj = np.array(100/df['cpi'])

df['real_wage'] = (df['min_wage'] / df['cpi']) * 100
df['real_wage'] = df['real_wage'].astype(int)

df["real_wage_roc"] = 0
for i in range(1, len(df)):
    df.loc[i, "real_wage_roc"] = ((df.loc[i, "real_wage"] - df.loc[i-1, "real_wage"])\
   /df.loc[i-1, "real_wage"]) * 100

df["min_wage_roc"] = 0
for i in range(1, len(df)):
    df.loc[i, "min_wage_roc"] = ((df.loc[i, "min_wage"] - df.loc[i-1, "min_wage"])\
   /df.loc[i-1, "min_wage"]) * 100

df = df[['year', 'min_wage','real_wage',"min_wage_roc","real_wage_roc",\
         'cpi', 'food_cpi', 'inflation', 'food_inflation']]
df.head()
```


#### 최저시급/ 실질 최저시급 상승율 비교 
```{python}
plt.clf()
plt.figure(figsize=(9,7))
sns.lineplot(data=df,x='year',y='min_wage_roc',color='red',label='최저시급 변화율',marker='o')
sns.lineplot(data=df,x='year',y='real_wage_roc',color='dodgerblue',label='실질 최저시급 변화율',marker='o')
# 레이블과 제목 설정
plt.xlabel('Year',fontsize=16)
plt.ylabel('Percentage(%)',fontsize=16)
plt.ylim(-2, 17)
plt.grid()
plt.title('최저시급과 실질 최저시급의 변화율 비교')
plt.legend()
plt.show()
```

***
## OECD 국가 별 최저시급
#### 칼럼 확인
```{python}
before_frame = pd.read_excel("file/2/최저임금데이터_df.xlsx")
path1, path2 = ["file/2/PPP원데이터_df.xlsx","file/2/환율원데이터_df.xlsx"]
df2 = pd.read_excel(path1) 
df2.columns
```

#### 병합 및 열 지정 
```{python}
df2.rename(columns = {"Reference area":"country","Unnamed: 3":"dollar_ppp"},inplace=True)
df2["dollar_ppp"] = df2["dollar_ppp"].astype(float)

names = {
"United Kingdom": 'UnitedKingdom', 'Türkiye': 'Turkiye', "New Zealand": 'NewZealand'
}
df2['country'] = df2['country'].replace(names)

temp_frame2 = df2[["country","dollar_ppp"]]     
before_frame = pd.merge(before_frame,temp_frame2,how="left",on="country")
before_frame.head()
```


```{python}

df3 = pd.read_excel(path2) 
df3.rename(columns = {"Reference area":"country","Unnamed: 4":"exchange_rate"},inplace=True)
df3 = df3[df3['Transaction']=="Exchange rates, average"].reset_index(drop=True)
df3["exchange_rate"] = df3["exchange_rate"].astype(float)

df3['country'] = df3['country'].replace(names)

temp_frame3 = df3[["country","exchange_rate"]]
oecd = pd.merge(before_frame,temp_frame3,how="left",on="country")
oecd.loc[oecd['country'] == 'Turkiye', 'exchange_rate'] = 33.1
oecd.head()
```

#### 환율/ PPP
```{python}
oecd["coefficient"] = oecd["exchange_rate"]/oecd["dollar_ppp"]
oecd["real_wage"] = oecd["min_wage"]*oecd["coefficient"]

oecd.head()
```

#### oecd 국가별 최저임금 비교 
```{python}
#| messeage: false
#| warning: false 
oecd = oecd.sort_values("real_wage",ascending=True).reset_index(drop=True)
plt.clf()
plt.figure(figsize=(9,7))
bar_colors = np.where(oecd["country"]=="Korea","red","dodgerblue")
sns.barplot(data=oecd.sort_values("real_wage",ascending=True), \
x='country', y='real_wage', palette=bar_colors)

plt.xticks(rotation=45, fontsize=7)  # 글씨 크기와 회전 각도 조정
plt.yticks(fontsize=12)
plt.xlabel('Country',fontsize=14)  # 축 제목 글씨 크기 조정
plt.ylabel('Real Wage',fontsize=14)  # 축 제목 글씨 크기 조정
plt.title('OECD 국가별 실질 최저임금', fontsize=20)  # 제목 글씨 크기 조정
plt.legend()
plt.show()
```

#### mean 추가한 그래프프
```{python}
#| messeage: false
#| warning: false 
mean1 = oecd["real_wage"].mean()
frame = pd.DataFrame({"country":'Mean',"real_wage":mean1},index=[0])
oecd1 = pd.concat([oecd,frame])
oecd1 = oecd1.sort_values("real_wage",ascending=True).reset_index(drop=True)
plt.clf()
plt.figure(figsize=(9,7))
bar_colors = np.where(oecd1["country"]=="Korea","red",np.where(oecd1["country"]=="Mean","seagreen","dodgerblue"))
sns.barplot(data=oecd1.sort_values("real_wage",ascending=True), \
x='country', y='real_wage', palette=bar_colors)
show_country_label = [0,3,7,9,11,13,14,16,18,20,22,24,27]
show_country = ['Mexico', 'Hungary', 'United States', 'Poland', 'Portugal', 'Mean',\
'Japan', 'Korea', 'Canada', 'Spain', 'United Kingdom', 'Germany', 'France']
plt.xticks(rotation=45, fontsize=10, ticks = show_country_label,labels =show_country )  # 글씨 크기와 회전 각도 조정
plt.yticks(fontsize=12)
plt.xlabel('Country',fontsize=14)  # 축 제목 글씨 크기 조정
plt.ylabel('Real Wage',fontsize=14)  # 축 제목 글씨 크기 조정
plt.title('OECD 주요국가별 실질 최저임금', fontsize=20)  # 제목 글씨 크기 조정
#plt.subplots_adjust(bottom=0.2) # 하단 레이블 간격 조정
plt.legend()
plt.show()
```

# Conclusion
```{python}

```

